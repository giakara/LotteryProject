@using LotteryProject.Client.Shared.Services.Interfaces;
@implements IDisposable
<PageTitle>Presents</PageTitle>
<h1>Presents</h1>

@if (presents is null)
{
	<h3>Loading...</h3>
}
else
{
	<div class="guest-full-list">
		<div class="search-box">
			<input class="input-search" type="search" placeholder="Search.." @bind-value="filteredText" name="search" @oninput="OnChangeTask">
		</div>
		<ul class="guest-list">
			@for (var index = 1; index < presents.ToList().Count() + 1; index++)
			{
				var present = presents.ToList()[index - 1];
				var indexOfPresent = indexes[index - 1];

				<PresentListItem Index="@indexOfPresent" PresentItem="@present" OnPresentDeleted="@HandlePresentDeleted" />

			}
			<button class="add-btn" type="button" @onclick="@(() => AddPresent())">Add Present</button>
		</ul>

		<div class="pager">
			<Pager PagingParameters="@_pagingParameters" SelectedPage="@SelectedPage"></Pager>
		</div>
	</div>



}
