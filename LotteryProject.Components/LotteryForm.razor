@using LotteryProject.Client.Shared.Services.Interfaces;
@using LotteryProject.Models.Entities
<h3>Lottery</h3>
<div>
	<button style="margin-top:10px;margin-left:10px;margin-bottom:15px;background-color: #7E57C2;" class="save-button" @onclick="BackToList">
		<i class="fa fa-reply"></i>
	</button>
</div>
<div>
	<Autocomplete TItem="Present"
				  TValue="string"
				  Data="@Presents"
				  TextField="@(( item ) => item.Description)"
				  ValueField="@(( item ) => item.Id.ToString())"
				  @bind-SelectedValue="@selectedSearchValue"
				  @bind-SelectedText="selectedAutoCompleteText"
				  Placeholder="Search..."
				  Filter="AutocompleteFilter.StartsWith"
				  CustomFilter="@(( item, searchValue ) => item.Description.IndexOf( searchValue, 0, StringComparison.CurrentCultureIgnoreCase ) >= 0 )">
		<NotFoundContent> Sorry... @context was not found! :( </NotFoundContent>
	</Autocomplete>
</div>
<div style="display: flex; justify-content: center; margin-top: 120px">
	<div class="wrap">
		<button class="lottery-button" type="button" @onclick="@(() => NewLottery())">New Lottery</button>
	</div>
</div>
<WinnerPopUp Title="Congratulations" IsOpened="isOpened">
	<ModalBody>
		<h4>Lottery Winner is:</h4>
		<h2>@lotteryWinner</h2>
	</ModalBody>
	<ModalFooter>
		<button class="btn btn-primary" @onclick="BackToList">Back To List</button>
	</ModalFooter>
</WinnerPopUp>

@code {
	bool isOpened = false;

	void OpenModal()
	{
		isOpened = true;
	}
}
