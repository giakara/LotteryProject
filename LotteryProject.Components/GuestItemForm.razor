@using Blazored.FluentValidation


<EditForm EditContext="_editContext" @ref="_editForm" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
	<FluentValidationValidator Options="(options) => AllRuleSetOptions(options)" DisableAssemblyScanning="@true" Validator="@Validator"></FluentValidationValidator>

	<div class="form-group">
		<label class="col-md-3">Name</label>
		<InputText class="col-md-8 form-control" @bind-Value="ItemViewModel.GuestName" style="width: 500px"></InputText>
		<ValidationMessage For="@(() => ItemViewModel.GuestName)" />
	</div>

	<div class="form-group">
		<label class="col-md-3">Surname</label>
		<InputText class="col-md-8 form-control" @bind-Value="ItemViewModel.GuestSurname" style="width: 500px;"></InputText>
		<ValidationMessage For="@(() => ItemViewModel.GuestSurname)" />
	</div>
	<div class="form-group">
		<label class="col-md-3">Email</label>
		<InputText class="col-md-8 form-control" @bind-Value="ItemViewModel.Email" style="width: 500px;"></InputText>
	</div>
	<button type="submit" style="margin-top:10px; background-color: #008000;" class="save-button">
		<i class="fa fa-save"></i>
	</button>
	<button style="margin-top:10px;margin-left:10px;background-color: #7E57C2;" class="save-button" @onclick="BackToList">
		<i class="fa fa-reply"></i>
	</button>

</EditForm>
